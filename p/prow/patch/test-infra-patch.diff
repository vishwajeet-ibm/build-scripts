diff --git a/.ko.yaml b/.ko.yaml
index 51d4dabe33..c87565392f 100644
--- a/.ko.yaml
+++ b/.ko.yaml
@@ -1,55 +1,55 @@
 # Distroless images:
 # defaultBaseImage: gcr.io/distroless/static:nonroot
 baseImageOverrides:
-  k8s.io/test-infra/prow/cmd/branchprotector: gcr.io/k8s-prow/alpine:v20200713-e9b3d9d
+  k8s.io/test-infra/prow/cmd/branchprotector: gcr.io/k8s-prow/alpine:v20220505-bca727ee56
   k8s.io/test-infra/prow/cmd/checkconfig: gcr.io/k8s-prow/git:v20220215-ddc3ad9
   k8s.io/test-infra/prow/cmd/clonerefs: gcr.io/k8s-prow/git:v20220215-ddc3ad9
   k8s.io/test-infra/prow/cmd/config-bootstrapper: gcr.io/k8s-prow/git:v20220215-ddc3ad9
   k8s.io/test-infra/prow/cmd/deck: gcr.io/k8s-prow/git-gke-gcloud-auth:v20221221-af5c6c8c0d
-  k8s.io/test-infra/prow/cmd/exporter: gcr.io/k8s-prow/alpine:v20200713-e9b3d9d
+  k8s.io/test-infra/prow/cmd/exporter: gcr.io/k8s-prow/alpine:v20220505-bca727ee56
   k8s.io/test-infra/prow/cmd/crier: gcr.io/k8s-prow/git-gke-gcloud-auth:v20221221-af5c6c8c0d
   k8s.io/test-infra/prow/cmd/entrypoint: gcr.io/k8s-prow/git:v20220215-ddc3ad9
   k8s.io/test-infra/prow/cmd/gangway: gcr.io/k8s-prow/git:v20220215-ddc3ad9
   k8s.io/test-infra/prow/cmd/generic-autobumper: gcr.io/k8s-prow/git:v20220215-ddc3ad9
   k8s.io/test-infra/prow/cmd/gerrit: gcr.io/k8s-prow/git:v20220215-ddc3ad9
   k8s.io/test-infra/prow/cmd/grandmatriarch: gcr.io/cloud-builders/gcloud@sha256:5b49dfb5e366dd75a5fc6d5d447be584f8f229c5a790ee0c3b0bd0cf70ec41dd
-  k8s.io/test-infra/prow/cmd/gcsupload: gcr.io/k8s-prow/alpine:v20200713-e9b3d9d
+  k8s.io/test-infra/prow/cmd/gcsupload: gcr.io/k8s-prow/alpine:v20220505-bca727ee56
   k8s.io/test-infra/prow/cmd/hook: gcr.io/k8s-prow/git:v20220215-ddc3ad9
-  k8s.io/test-infra/prow/cmd/hmac: gcr.io/k8s-prow/alpine:v20200713-e9b3d9d
-  k8s.io/test-infra/prow/cmd/horologium: gcr.io/k8s-prow/alpine:v20200713-e9b3d9d
+  k8s.io/test-infra/prow/cmd/hmac: gcr.io/k8s-prow/alpine:v20220505-bca727ee56
+  k8s.io/test-infra/prow/cmd/horologium: gcr.io/k8s-prow/alpine:v20220505-bca727ee56
   k8s.io/test-infra/prow/cmd/initupload: gcr.io/k8s-prow/git:v20220215-ddc3ad9
-  k8s.io/test-infra/prow/cmd/invitations-accepter: gcr.io/k8s-prow/alpine:v20200713-e9b3d9d
+  k8s.io/test-infra/prow/cmd/invitations-accepter: gcr.io/k8s-prow/alpine:v20220505-bca727ee56
   k8s.io/test-infra/prow/cmd/jenkins-operator: gcr.io/k8s-prow/git:v20220215-ddc3ad9
-  k8s.io/test-infra/prow/cmd/peribolos: gcr.io/k8s-prow/alpine:v20200713-e9b3d9d
+  k8s.io/test-infra/prow/cmd/peribolos: gcr.io/k8s-prow/alpine:v20220505-bca727ee56
   k8s.io/test-infra/prow/cmd/sidecar: gcr.io/k8s-prow/git:v20220215-ddc3ad9
   k8s.io/test-infra/prow/cmd/sinker: gcr.io/k8s-prow/git-gke-gcloud-auth:v20221221-af5c6c8c0d
-  k8s.io/test-infra/prow/cmd/status-reconciler: gcr.io/k8s-prow/alpine:v20200713-e9b3d9d
+  k8s.io/test-infra/prow/cmd/status-reconciler: gcr.io/k8s-prow/alpine:v20220505-bca727ee56
   k8s.io/test-infra/prow/cmd/sub: gcr.io/k8s-prow/git:v20220215-ddc3ad9
   k8s.io/test-infra/prow/cmd/tide: gcr.io/k8s-prow/git:v20220215-ddc3ad9
-  k8s.io/test-infra/prow/cmd/tot: gcr.io/k8s-prow/alpine:v20200713-e9b3d9d
+  k8s.io/test-infra/prow/cmd/tot: gcr.io/k8s-prow/alpine:v20220505-bca727ee56
   k8s.io/test-infra/prow/cmd/prow-controller-manager: gcr.io/k8s-prow/git-gke-gcloud-auth:v20221221-af5c6c8c0d
-  k8s.io/test-infra/prow/cmd/admission: gcr.io/k8s-prow/alpine:v20200713-e9b3d9d
-  k8s.io/test-infra/prow/cmd/mkpj: gcr.io/k8s-prow/alpine:v20200713-e9b3d9d
-  k8s.io/test-infra/prow/cmd/mkpod: gcr.io/k8s-prow/alpine:v20200713-e9b3d9d
-  k8s.io/test-infra/prow/cmd/pipeline: gcr.io/k8s-prow/alpine:v20200713-e9b3d9d
-  k8s.io/test-infra/prow/external-plugins/needs-rebase: gcr.io/k8s-prow/alpine:v20200713-e9b3d9d
-  k8s.io/test-infra/robots/issue-creator: gcr.io/k8s-prow/alpine:v20200713-e9b3d9d
-  k8s.io/test-infra/testgrid/cmd/configurator: gcr.io/k8s-prow/alpine:v20200713-e9b3d9d
+  k8s.io/test-infra/prow/cmd/admission: gcr.io/k8s-prow/alpine:v20220505-bca727ee56
+  k8s.io/test-infra/prow/cmd/mkpj: gcr.io/k8s-prow/alpine:v20220505-bca727ee56
+  k8s.io/test-infra/prow/cmd/mkpod: gcr.io/k8s-prow/alpine:v20220505-bca727ee56
+  k8s.io/test-infra/prow/cmd/pipeline: gcr.io/k8s-prow/alpine:v20220505-bca727ee56
+  k8s.io/test-infra/prow/external-plugins/needs-rebase: gcr.io/k8s-prow/alpine:v20220505-bca727ee56
+  k8s.io/test-infra/robots/issue-creator: gcr.io/k8s-prow/alpine:v20220505-bca727ee56
+  k8s.io/test-infra/testgrid/cmd/configurator: gcr.io/k8s-prow/alpine:v20220505-bca727ee56
   # external
   k8s.io/test-infra/prow/external-plugins/cherrypicker: gcr.io/k8s-prow/git:v20220215-ddc3ad9
-  k8s.io/test-infra/prow/external-plugins/refresh: gcr.io/k8s-prow/alpine:v20200713-e9b3d9d
-  k8s.io/test-infra/ghproxy: gcr.io/k8s-prow/alpine:v20200713-e9b3d9d
-  k8s.io/test-infra/label_sync: gcr.io/k8s-prow/alpine:v20200713-e9b3d9d
-  k8s.io/test-infra/robots/commenter: gcr.io/k8s-prow/alpine:v20200713-e9b3d9d
+  k8s.io/test-infra/prow/external-plugins/refresh: gcr.io/k8s-prow/alpine:v20220505-bca727ee56
+  k8s.io/test-infra/ghproxy: gcr.io/k8s-prow/alpine:v20220505-bca727ee56
+  k8s.io/test-infra/label_sync: gcr.io/k8s-prow/alpine:v20220505-bca727ee56
+  k8s.io/test-infra/robots/commenter: gcr.io/k8s-prow/alpine:v20220505-bca727ee56
   k8s.io/test-infra/robots/pr-creator: gcr.io/k8s-prow/git:v20220215-ddc3ad9
   k8s.io/test-infra/testgrid/cmd/transfigure: gcr.io/k8s-testimages/launcher.gcr.io/google/bazel:v20210128-721ee66-test-infra
-  k8s.io/test-infra/gcsweb/cmd/gcsweb: gcr.io/k8s-prow/alpine:v20200713-e9b3d9d
-  k8s.io/test-infra/gencred: gcr.io/k8s-prow/alpine:v20200713-e9b3d9d
+  k8s.io/test-infra/gcsweb/cmd/gcsweb: gcr.io/k8s-prow/alpine:v20220505-bca727ee56
+  k8s.io/test-infra/gencred: gcr.io/k8s-prow/alpine:v20220505-bca727ee56
   # prow integration test
-  k8s.io/test-infra/prow/test/integration/cmd/fakeghserver: gcr.io/k8s-prow/alpine:v20200713-e9b3d9d
+  k8s.io/test-infra/prow/test/integration/cmd/fakeghserver: gcr.io/k8s-prow/alpine:v20220505-bca727ee56
   k8s.io/test-infra/prow/test/integration/cmd/fakegitserver: gcr.io/k8s-prow/git:v20220523-6026203ca9
   k8s.io/test-infra/prow/test/integration/cmd/fakepubsub: google/cloud-sdk:389.0.0
-  k8s.io/test-infra/prow/test/integration/cmd/fakegcsserver: gcr.io/k8s-prow/alpine:v20200713-e9b3d9d
+  k8s.io/test-infra/prow/test/integration/cmd/fakegcsserver: gcr.io/k8s-prow/alpine:v20220505-bca727ee56
 
 # https://pkg.go.dev/cmd/link
 # -s: omit symbol/debug info
diff --git a/hack/prowimagebuilder/main.go b/hack/prowimagebuilder/main.go
index db1550c56a..a397f33567 100644
--- a/hack/prowimagebuilder/main.go
+++ b/hack/prowimagebuilder/main.go
@@ -36,7 +36,7 @@ import (
 )
 
 const (
-	defaultArch = "linux/amd64"
+	defaultArch = "linux/s390x"
 	allArch     = "all"
 
 	gatherStaicScriptName = "gather-static.sh"
diff --git a/hack/prowimagebuilder/main_test.go b/hack/prowimagebuilder/main_test.go
index e31ecec1f6..ab9791336a 100644
--- a/hack/prowimagebuilder/main_test.go
+++ b/hack/prowimagebuilder/main_test.go
@@ -185,12 +185,16 @@ func TestAllTags(t *testing.T) {
 	}{
 		{
 			name: "base",
-			arch: "linux/amd64",
+			arch: "linux/s390x",
 			want: []string{
 				"latest",
 				"latest-root",
 				"20220222-a1b2c3d4",
 				"ko-20220222-a1b2c3d4",
+                                "latest-s390x",
+                                "latest-root-s390x",
+                                "20220222-a1b2c3d4-s390x",
+                                "ko-20220222-a1b2c3d4-s390x",
 			},
 		},
 		{
@@ -323,7 +327,7 @@ func TestBuildAndPush(t *testing.T) {
 			name: "base",
 			id: imageDef{
 				Dir:  "prow/cmd/awesome",
-				Arch: "linux/amd64",
+				Arch: "linux/s390x",
 			},
 			koDockerRepo: "local.test",
 			want: []string{
@@ -334,8 +338,12 @@ func TestBuildAndPush(t *testing.T) {
 				"--tags=latest-root",
 				"--tags=20220222-a1b2c3d4",
 				"--tags=ko-20220222-a1b2c3d4",
+                                "--tags=latest-s390x",
+                                "--tags=latest-root-s390x",
+                                "--tags=20220222-a1b2c3d4-s390x",
+                                "--tags=ko-20220222-a1b2c3d4-s390x",
 				"--base-import-paths",
-				"--platform=linux/amd64",
+				"--platform=linux/s390x",
 				"./prow/cmd/awesome",
 			},
 		},
@@ -343,7 +351,7 @@ func TestBuildAndPush(t *testing.T) {
 			name: "push",
 			id: imageDef{
 				Dir:  "prow/cmd/awesome",
-				Arch: "linux/amd64",
+				Arch: "linux/s390x",
 			},
 			koDockerRepo: "local.test",
 			push:         true,
@@ -354,8 +362,12 @@ func TestBuildAndPush(t *testing.T) {
 				"--tags=latest-root",
 				"--tags=20220222-a1b2c3d4",
 				"--tags=ko-20220222-a1b2c3d4",
+                                "--tags=latest-s390x",
+                                "--tags=latest-root-s390x",
+                                "--tags=20220222-a1b2c3d4-s390x",
+                                "--tags=ko-20220222-a1b2c3d4-s390x",
 				"--base-import-paths",
-				"--platform=linux/amd64",
+				"--platform=linux/s390x",
 				"./prow/cmd/awesome",
 			},
 		},
diff --git a/hack/run-in-python-container.sh b/hack/run-in-python-container.sh
index 0f8ebc7eea..4646c11fcb 100755
--- a/hack/run-in-python-container.sh
+++ b/hack/run-in-python-container.sh
@@ -22,7 +22,7 @@ set -o pipefail
 REPO_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd -P)"
 cd "${REPO_ROOT}"
 
-PY_IMAGE='python:3.9-slim-buster'
+PY_IMAGE='python:3.9-slim-bookworm'
 
 docker run \
     --rm -i \
diff --git a/images/kubekins-e2e/kops-e2e-runner.sh b/images/kubekins-e2e/kops-e2e-runner.sh
index 1e62308c6c..acfbc3fb77 100755
--- a/images/kubekins-e2e/kops-e2e-runner.sh
+++ b/images/kubekins-e2e/kops-e2e-runner.sh
@@ -34,11 +34,11 @@ if [[ -z "${KOPS_BASE_URL:-}" ]]; then
   fi
 fi
 
-curl -fsS --retry 3 -o "/workspace/kops" "${KOPS_BASE_URL}/linux/amd64/kops"
+curl -fsS --retry 3 -o "/workspace/kops" "${KOPS_BASE_URL}/linux/s390x/kops"
 chmod +x "/workspace/kops"
 
 # Get kubectl on the path (works after e2e-runner.sh:unpack_binaries)
-export PRIORITY_PATH="${WORKSPACE}/kubernetes/platforms/linux/amd64"
+export PRIORITY_PATH="${WORKSPACE}/kubernetes/platforms/linux/s390x"
 
 e2e_args=( \
   --deployment=kops \
diff --git a/metrics/get_jq.sh b/metrics/get_jq.sh
index fe45704d39..14742d26fe 100755
--- a/metrics/get_jq.sh
+++ b/metrics/get_jq.sh
@@ -41,7 +41,9 @@ download() {
 
 mkdir -p "${JQ_DIR}"
 # linux64 is used by CI, making sure that this is used in CI as well
+if [[ "$(uname -m)" != s390x ]]; then
 download jq-linux64
+fi
 # ensure that `_bin/jq-1.5/jq` is compatible with host, so that python3 test
 # won't fail locally
 if [[ "$(uname)" == Darwin ]]; then
diff --git a/prow/.prow-images.yaml b/prow/.prow-images.yaml
index 6bb3a018a7..d55dd0cfae 100644
--- a/prow/.prow-images.yaml
+++ b/prow/.prow-images.yaml
@@ -29,13 +29,13 @@ images:
   - dir: prow/cmd/webhook-server
   # pod utils
   - dir: prow/cmd/clonerefs
-    arch: all
+    arch: linux/s390x
   - dir: prow/cmd/entrypoint
-    arch: all
+    arch: linux/s390x
   - dir: prow/cmd/initupload
-    arch: all
+    arch: linux/s390x
   - dir: prow/cmd/sidecar
-    arch: all
+    arch: linux/s390x
   - dir: prow/external-plugins/needs-rebase
   - dir: prow/external-plugins/cherrypicker
   - dir: prow/external-plugins/refresh
diff --git a/prow/cmd/deck/gather-static.sh b/prow/cmd/deck/gather-static.sh
index 06092d5f7b..10360340ab 100755
--- a/prow/cmd/deck/gather-static.sh
+++ b/prow/cmd/deck/gather-static.sh
@@ -23,7 +23,7 @@ cd "${REPO_ROOT}"
 # Build ts-rollup so that it can run in docker
 source hack/build/setup-go.sh
 if [[ -z ${NO_DOCKER:-} ]]; then
-  GOOS=linux GOARCH=amd64 go build -o _bin/ts-rollup k8s.io/test-infra/hack/ts-rollup
+  GOOS=linux GOARCH=s390x go build -o _bin/ts-rollup k8s.io/test-infra/hack/ts-rollup
 else
   go build -o _bin/ts-rollup k8s.io/test-infra/hack/ts-rollup
 fi
diff --git a/prow/push.sh b/prow/push.sh
index 46fca16e55..c0571e16ad 100755
--- a/prow/push.sh
+++ b/prow/push.sh
@@ -66,10 +66,10 @@ if [[ "${new_version}" == *-dirty ]]; then
   echo "  Fix with git commit" >&2
   exit 1
 fi
-echo -e "Pushing $(color-version ${new_version}) via $(color-target //prow:release-push --platforms=@io_bazel_rules_go//go/toolchain:linux_amd64) ..." >&2
+echo -e "Pushing $(color-version ${new_version}) via $(color-target //prow:release-push --platforms=@io_bazel_rules_go//go/toolchain:linux_s390x) ..." >&2
 # Remove retries after https://github.com/bazelbuild/rules_docker/issues/673
 for i in {1..3}; do
-  if bazel run //prow:release-push --platforms=@io_bazel_rules_go//go/toolchain:linux_amd64; then
+  if bazel run //prow:release-push --platforms=@io_bazel_rules_go//go/toolchain:linux_s390x; then
     exit 0
   elif [[ "$i" == 3 ]]; then
     echo "Failed"
diff --git a/releng/run.sh b/releng/run.sh
index 8e83907bac..e3484fd848 100755
--- a/releng/run.sh
+++ b/releng/run.sh
@@ -25,7 +25,7 @@ BIN_DIR="_bin"
 CMD_ARGS=""
 
 for tool in config-rotator config-forker; do
-    GOOS=linux GOARCH=amd64 go build -o "${BIN_DIR}/${tool}" "${REPO_ROOT}/releng/${tool}"
+    GOOS=linux GOARCH=s390x go build -o "${BIN_DIR}/${tool}" "${REPO_ROOT}/releng/${tool}"
     CMD_ARGS+="${BIN_DIR}/${tool} "
 done
 
diff --git a/hack/run-in-node-container.sh b/hack/run-in-node-container.sh
index b7dd02699d..568dd4a665 100755
--- a/hack/run-in-node-container.sh
+++ b/hack/run-in-node-container.sh
@@ -22,7 +22,7 @@ set -o pipefail
 REPO_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd -P)"
 cd "${REPO_ROOT}"

-NODE_IMAGE='node:18-bullseye-slim'
+NODE_IMAGE='node:18-bookworm-slim'

 DOCKER=(docker)
